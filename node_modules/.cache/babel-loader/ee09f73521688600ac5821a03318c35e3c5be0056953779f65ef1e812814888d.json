{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\sdp-app\\\\client\\\\src\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport crypto from 'crypto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  token\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const crypto = require('crypto');\n  async function decryptData(encryptedData, iv, key) {\n    try {\n      const cryptoKey = await crypto.subtle.importKey('raw', new TextEncoder().encode(key), 'AES-GCM', true, ['decrypt']);\n\n      // Convert the hex string IV to a Uint8Array\n      const ivUint8Array = new Uint8Array(iv.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n      const decryptedData = await crypto.subtle.decrypt({\n        name: 'AES-GCM',\n        iv: ivUint8Array\n      }, cryptoKey, encryptedData);\n      return new TextDecoder().decode(decryptedData);\n    } catch (error) {\n      console.error('Decryption failed:', error.message);\n      return null;\n    }\n  }\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3001/search?term=${searchTerm}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const decryptedData = response.data.map(customer => {\n        // Decrypt credit card and medical records\n        const decryptedCreditCard = decryptData(customer.creditCard, customer.ivCreditCard, \"hghghghs12342345hghghghs12342345\");\n        const decryptedMedicalRecords = decryptData(customer.medicalRecords, customer.ivMedicalRecords, \"hghghghs12342345hghghghs12342345\");\n\n        // Return the decrypted data along with other customer details\n        return {\n          ...customer,\n          decryptedCreditCard,\n          decryptedMedicalRecords\n        };\n      });\n      setSearchResult(decryptedData);\n    } catch (error) {\n      console.error('Search failed', error);\n    }\n  };\n  const handleSearch = () => {\n    // Trigger search when the button is clicked\n    fetchData();\n  };\n  useEffect(() => {\n    const tokenPayload = token.split('.')[1];\n    const decodedPayload = JSON.parse(atob(tokenPayload));\n    const role = decodedPayload.role;\n    setUserRole(role);\n  }, [token]);\n  const displayCustomerDetails = customer => {\n    try {\n      const key = 'hghghghs12342345hghghghs12342345';\n\n      // Decode and then decrypt\n      const decodedCreditCard = decodeURIComponent(customer.creditCard);\n      const decodedMedicalRecords = decodeURIComponent(customer.medicalRecords);\n      const decryptedCreditCard = decryptData(decodedCreditCard, customer.ivCreditCard, key);\n      const decryptedMedicalRecords = decryptData(decodedMedicalRecords, customer.ivMedicalRecords, key);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", customer.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", customer.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", customer.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", customer.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), userRole === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Credit Card: \", decryptedCreditCard]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Medical Records: \", decryptedMedicalRecords]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : userRole === 'privileged' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Credit Card: \", decryptedCreditCard]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this) :\n        // For normal users\n        null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, customer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    } catch (error) {\n      console.error('Display customer details failed:', error.message);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter search term...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), searchResult.map(customer => displayCustomerDetails(customer))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"qfkkJieS0nJ8SgvtNQS4rT7U68o=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","crypto","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","token","_s","searchTerm","setSearchTerm","searchResult","setSearchResult","userRole","setUserRole","require","decryptData","encryptedData","iv","key","cryptoKey","subtle","importKey","TextEncoder","encode","ivUint8Array","Uint8Array","match","map","byte","parseInt","decryptedData","decrypt","name","TextDecoder","decode","error","console","message","fetchData","response","get","headers","Authorization","data","customer","decryptedCreditCard","creditCard","ivCreditCard","decryptedMedicalRecords","medicalRecords","ivMedicalRecords","handleSearch","tokenPayload","split","decodedPayload","JSON","parse","atob","role","displayCustomerDetails","decodedCreditCard","decodeURIComponent","decodedMedicalRecords","children","fileName","_jsxFileName","lineNumber","columnNumber","email","address","phone","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/sdp-app/client/src/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport crypto from 'crypto'\r\n\r\nconst Search = ({ token }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [userRole, setUserRole] = useState('');\r\n\r\n  const crypto = require('crypto');\r\n\r\n  async function decryptData(encryptedData, iv, key) {\r\n    try {\r\n      const cryptoKey = await crypto.subtle.importKey('raw', new TextEncoder().encode(key), 'AES-GCM', true, ['decrypt']);\r\n  \r\n      // Convert the hex string IV to a Uint8Array\r\n      const ivUint8Array = new Uint8Array(iv.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\r\n  \r\n      const decryptedData = await crypto.subtle.decrypt({ name: 'AES-GCM', iv: ivUint8Array }, cryptoKey, encryptedData);\r\n      return new TextDecoder().decode(decryptedData);\r\n    } catch (error) {\r\n      console.error('Decryption failed:', error.message);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/search?term=${searchTerm}`, {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      const decryptedData = response.data.map((customer) => {\r\n        // Decrypt credit card and medical records\r\n        const decryptedCreditCard = decryptData(customer.creditCard, customer.ivCreditCard, \"hghghghs12342345hghghghs12342345\");\r\n        const decryptedMedicalRecords = decryptData(customer.medicalRecords, customer.ivMedicalRecords, \"hghghghs12342345hghghghs12342345\");\r\n\r\n        // Return the decrypted data along with other customer details\r\n        return {\r\n          ...customer,\r\n          decryptedCreditCard,\r\n          decryptedMedicalRecords,\r\n        };\r\n      });\r\n\r\n      setSearchResult(decryptedData);\r\n    } catch (error) {\r\n      console.error('Search failed', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    // Trigger search when the button is clicked\r\n    fetchData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const tokenPayload = token.split('.')[1];\r\n    const decodedPayload = JSON.parse(atob(tokenPayload));\r\n    const role = decodedPayload.role;\r\n    setUserRole(role);\r\n  }, [token]);\r\n\r\n  const displayCustomerDetails = (customer) => {\r\n    try {\r\n      const key = 'hghghghs12342345hghghghs12342345';\r\n      \r\n      // Decode and then decrypt\r\n      const decodedCreditCard = decodeURIComponent(customer.creditCard);\r\n      const decodedMedicalRecords = decodeURIComponent(customer.medicalRecords);\r\n      \r\n      const decryptedCreditCard = decryptData(decodedCreditCard, customer.ivCreditCard, key);\r\n      const decryptedMedicalRecords = decryptData(decodedMedicalRecords, customer.ivMedicalRecords, key);\r\n  \r\n      return (\r\n        <div key={customer.id}>\r\n          <p>Name: {customer.name}</p>\r\n          <p>Email: {customer.email}</p>\r\n          <p>Address: {customer.address}</p>\r\n          <p>Phone: {customer.phone}</p>\r\n          {userRole === 'admin' ? (\r\n            <>\r\n              <p>Credit Card: {decryptedCreditCard}</p>\r\n              <p>Medical Records: {decryptedMedicalRecords}</p>\r\n            </>\r\n          ) : userRole === 'privileged' ? (\r\n            <p>Credit Card: {decryptedCreditCard}</p>\r\n          ) : (\r\n            // For normal users\r\n            null\r\n          )}\r\n          <hr />\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.error('Display customer details failed:', error.message);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <h2>Search</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter search term...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n      {searchResult.map((customer) => displayCustomerDetails(customer))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}