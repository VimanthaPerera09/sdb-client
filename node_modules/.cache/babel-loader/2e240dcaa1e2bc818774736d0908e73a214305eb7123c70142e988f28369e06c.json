{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\sdp-app\\\\client\\\\src\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  token\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3001/search?term=${searchTerm}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setSearchResult(response.data);\n    } catch (error) {\n      console.error('Search failed', error);\n    }\n  };\n  const handleSearch = () => {\n    // Trigger search when the button is clicked\n    fetchData();\n  };\n  useEffect(() => {\n    const tokenPayload = token.split('.')[1];\n    const decodedPayload = JSON.parse(atob(tokenPayload));\n    const role = decodedPayload.role;\n    setUserRole(role);\n  }, [token]);\n  const decryptData = (encryptedData, iv) => {\n    // Add your decryption logic here\n    // For example, using the forge library\n    const decipher = forge.cipher.createDecipher('AES-CBC', forge.util.hexToBytes(iv));\n    decipher.start({\n      iv: forge.util.hexToBytes(iv)\n    });\n    decipher.update(forge.util.createBuffer(forge.util.hexToBytes(encryptedData)));\n    decipher.finish();\n    return decipher.output.toString();\n  };\n  const displayCustomerDetails = customer => {\n    const {\n      creditCard,\n      ivCreditCard,\n      medicalRecords,\n      ivMedicalRecords\n    } = customer;\n\n    // Decrypt Credit Card\n    const decryptedCreditCard = decryptData(creditCard, ivCreditCard);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", customer.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", customer.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", customer.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", customer.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), userRole === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Credit Card: \", decryptedCreditCard]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Medical Records: \", decryptData(medicalRecords, ivMedicalRecords)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : userRole === 'privileged' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Credit Card: \", decryptedCreditCard]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) :\n      // For normal users\n      null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, customer.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter search term...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), searchResult.map(customer => displayCustomerDetails(customer))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"qfkkJieS0nJ8SgvtNQS4rT7U68o=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","token","_s","searchTerm","setSearchTerm","searchResult","setSearchResult","userRole","setUserRole","fetchData","response","get","headers","Authorization","data","error","console","handleSearch","tokenPayload","split","decodedPayload","JSON","parse","atob","role","decryptData","encryptedData","iv","decipher","forge","cipher","createDecipher","util","hexToBytes","start","update","createBuffer","finish","output","toString","displayCustomerDetails","customer","creditCard","ivCreditCard","medicalRecords","ivMedicalRecords","decryptedCreditCard","children","name","fileName","_jsxFileName","lineNumber","columnNumber","email","address","phone","id","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/USER/sdp-app/client/src/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Search = ({ token }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [userRole, setUserRole] = useState('');\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/search?term=${searchTerm}`, {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      setSearchResult(response.data);\r\n    } catch (error) {\r\n      console.error('Search failed', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    // Trigger search when the button is clicked\r\n    fetchData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const tokenPayload = token.split('.')[1];\r\n    const decodedPayload = JSON.parse(atob(tokenPayload));\r\n    const role = decodedPayload.role;\r\n    setUserRole(role);\r\n  }, [token]);\r\n\r\n  const decryptData = (encryptedData, iv) => {\r\n    // Add your decryption logic here\r\n    // For example, using the forge library\r\n    const decipher = forge.cipher.createDecipher('AES-CBC', forge.util.hexToBytes(iv));\r\n    decipher.start({ iv: forge.util.hexToBytes(iv) });\r\n    decipher.update(forge.util.createBuffer(forge.util.hexToBytes(encryptedData)));\r\n    decipher.finish();\r\n    return decipher.output.toString();\r\n  };\r\n\r\n  const displayCustomerDetails = (customer) => {\r\n    const { creditCard, ivCreditCard, medicalRecords, ivMedicalRecords } = customer;\r\n\r\n    // Decrypt Credit Card\r\n    const decryptedCreditCard = decryptData(creditCard, ivCreditCard);\r\n\r\n    return (\r\n      <div key={customer.id}>\r\n        <p>Name: {customer.name}</p>\r\n        <p>Email: {customer.email}</p>\r\n        <p>Address: {customer.address}</p>\r\n        <p>Phone: {customer.phone}</p>\r\n        {userRole === 'admin' ? (\r\n          <>\r\n            <p>Credit Card: {decryptedCreditCard}</p>\r\n            <p>Medical Records: {decryptData(medicalRecords, ivMedicalRecords)}</p>\r\n          </>\r\n        ) : userRole === 'privileged' ? (\r\n          <p>Credit Card: {decryptedCreditCard}</p>\r\n        ) : (\r\n          // For normal users\r\n          null\r\n        )}\r\n        <hr />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Search</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter search term...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n      {searchResult.map((customer) => displayCustomerDetails(customer))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}