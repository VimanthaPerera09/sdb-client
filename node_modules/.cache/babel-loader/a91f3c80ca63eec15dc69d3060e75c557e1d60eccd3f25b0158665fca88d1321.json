{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\sdp-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './Login';\nimport Search from './Search';\nimport AddUser from './AddUser';\nimport AddCustomer from './AddCustomer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState('');\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setToken: setToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: token ? /*#__PURE__*/_jsxDEV(Search, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-user\",\n        element: token && isAdmin(token) ? /*#__PURE__*/_jsxDEV(AddUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-customer\",\n        element: token ? /*#__PURE__*/_jsxDEV(AddCustomer, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to check if the user has admin role\n_s(App, \"ASU5DC/3PNAtDu6g7HTvQX3bJZs=\");\n_c = App;\nconst isAdmin = token => {\n  // Assuming the token contains information about the user's role\n  // Adjust this based on your actual token structure\n  const decodedToken = decodeToken(token);\n  return decodedToken && decodedToken.role === 'admin';\n};\n\n// Helper function to decode the JWT token\nconst decodeToken = token => {\n  try {\n    // Decode the token (you may need to use a library like jwt-decode)\n    // Replace 'your_secret_key' with your actual secret key\n    const decoded = jwt_decode(token, 'your_secret_key');\n    return decoded;\n  } catch (error) {\n    return null;\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Login","Search","AddUser","AddCustomer","jsxDEV","_jsxDEV","App","_s","token","setToken","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","isAdmin","_c","decodedToken","decodeToken","role","decoded","jwt_decode","error","$RefreshReg$"],"sources":["C:/Users/USER/sdp-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './Login';\nimport Search from './Search';\nimport AddUser from './AddUser';\nimport AddCustomer from './AddCustomer';\n\nconst App = () => {\n  const [token, setToken] = useState('');\n\n  return (\n    <Router>\n      <Routes>\n        {/* Redirect to Login by default */}\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n\n        <Route\n          path=\"/login\"\n          element={<Login setToken={setToken} />}\n        />\n\n        {/* Protected route: User must be logged in */}\n        <Route\n          path=\"/search\"\n          element={token ? <Search token={token} /> : <Navigate to=\"/login\" />}\n        />\n\n        {/* Protected route: User must be logged in and have admin role */}\n        <Route\n          path=\"/add-user\"\n          element={token && isAdmin(token) ? <AddUser /> : <Navigate to=\"/login\" />}\n        />\n\n        {/* Protected route: User must be logged in */}\n        <Route\n          path=\"/add-customer\"\n          element={token ? <AddCustomer token={token} /> : <Navigate to=\"/login\" />}\n        />\n      </Routes>\n    </Router>\n  );\n};\n\n// Helper function to check if the user has admin role\nconst isAdmin = (token) => {\n  // Assuming the token contains information about the user's role\n  // Adjust this based on your actual token structure\n  const decodedToken = decodeToken(token);\n  return decodedToken && decodedToken.role === 'admin';\n};\n\n// Helper function to decode the JWT token\nconst decodeToken = (token) => {\n  try {\n    // Decode the token (you may need to use a library like jwt-decode)\n    // Replace 'your_secret_key' with your actual secret key\n    const decoded = jwt_decode(token, 'your_secret_key');\n    return decoded;\n  } catch (error) {\n    return null;\n  }\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}