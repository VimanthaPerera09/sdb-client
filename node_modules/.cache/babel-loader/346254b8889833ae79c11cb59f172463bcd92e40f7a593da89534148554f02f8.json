{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\sdp-app\\\\client\\\\src\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport forge from 'node-forge'; // Make sure to install the node-forge library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  token\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const decryptData = (encryptedData, iv) => {\n    try {\n      console.log('IV:', iv);\n      console.log('Encrypted Credit Card:', encryptedData);\n      const decipher = forge.cipher.createDecipher('AES-CBC', forge.util.hexToBytes(iv));\n      decipher.start({\n        iv: forge.util.hexToBytes(iv)\n      });\n      decipher.update(forge.util.createBuffer(forge.util.hexToBytes(encryptedData)));\n      const result = decipher.finish(); // Check if decryption was successful\n\n      if (result) {\n        const decryptedText = decipher.output.toString();\n        console.log('Decryption successful. Decrypted Text:', decryptedText);\n        return decryptedText;\n      } else {\n        console.error('Decryption failed: Unable to finish decryption');\n        return null;\n      }\n    } catch (error) {\n      console.error('Decryption failed:', error.message);\n      return null;\n    }\n  };\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3001/search?term=${searchTerm}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n\n      // Decrypt medical records and credit card for each customer\n      const decryptedData = response.data.map(customer => ({\n        ...customer,\n        creditCard: decryptData(customer.creditCard, customer.ivCreditCard),\n        medicalRecords: decryptData(customer.medicalRecords, customer.ivMedicalRecords)\n      }));\n      setSearchResult(decryptedData);\n    } catch (error) {\n      console.error('Search failed', error);\n    }\n  };\n  const handleSearch = () => {\n    // Trigger search when the button is clicked\n    fetchData();\n  };\n  useEffect(() => {\n    const tokenPayload = token.split('.')[1];\n    const decodedPayload = JSON.parse(atob(tokenPayload));\n    const role = decodedPayload.role;\n    setUserRole(role);\n  }, [token]);\n  const displayCustomerDetails = customer => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", customer.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", customer.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", customer.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", customer.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), userRole === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Credit Card: \", customer.creditCard]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Medical Records: \", customer.medicalRecords]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : userRole === 'privileged' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Credit Card: \", customer.creditCard]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) :\n      // For normal users\n      null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, customer.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter search term...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), searchResult.map(customer => displayCustomerDetails(customer))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"qfkkJieS0nJ8SgvtNQS4rT7U68o=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","forge","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","token","_s","searchTerm","setSearchTerm","searchResult","setSearchResult","userRole","setUserRole","decryptData","encryptedData","iv","console","log","decipher","cipher","createDecipher","util","hexToBytes","start","update","createBuffer","result","finish","decryptedText","output","toString","error","message","fetchData","response","get","headers","Authorization","decryptedData","data","map","customer","creditCard","ivCreditCard","medicalRecords","ivMedicalRecords","handleSearch","tokenPayload","split","decodedPayload","JSON","parse","atob","role","displayCustomerDetails","children","name","fileName","_jsxFileName","lineNumber","columnNumber","email","address","phone","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/sdp-app/client/src/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport forge from 'node-forge'; // Make sure to install the node-forge library\r\n\r\nconst Search = ({ token }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [userRole, setUserRole] = useState('');\r\n\r\n  const decryptData = (encryptedData, iv) => {\r\n    try {\r\n      console.log('IV:', iv);\r\n      console.log('Encrypted Credit Card:', encryptedData);\r\n  \r\n      const decipher = forge.cipher.createDecipher('AES-CBC', forge.util.hexToBytes(iv));\r\n      decipher.start({ iv: forge.util.hexToBytes(iv) });\r\n      decipher.update(forge.util.createBuffer(forge.util.hexToBytes(encryptedData)));\r\n      const result = decipher.finish(); // Check if decryption was successful\r\n  \r\n      if (result) {\r\n        const decryptedText = decipher.output.toString();\r\n        console.log('Decryption successful. Decrypted Text:', decryptedText);\r\n        return decryptedText;\r\n      } else {\r\n        console.error('Decryption failed: Unable to finish decryption');\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Decryption failed:', error.message);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/search?term=${searchTerm}`, {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      // Decrypt medical records and credit card for each customer\r\n      const decryptedData = response.data.map((customer) => ({\r\n        ...customer,\r\n        creditCard: decryptData(customer.creditCard, customer.ivCreditCard),\r\n        medicalRecords: decryptData(customer.medicalRecords, customer.ivMedicalRecords),\r\n      }));\r\n\r\n      setSearchResult(decryptedData);\r\n    } catch (error) {\r\n      console.error('Search failed', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    // Trigger search when the button is clicked\r\n    fetchData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const tokenPayload = token.split('.')[1];\r\n    const decodedPayload = JSON.parse(atob(tokenPayload));\r\n    const role = decodedPayload.role;\r\n    setUserRole(role);\r\n  }, [token]);\r\n\r\n  const displayCustomerDetails = (customer) => {\r\n    return (\r\n      <div key={customer.id}>\r\n        <p>Name: {customer.name}</p>\r\n        <p>Email: {customer.email}</p>\r\n        <p>Address: {customer.address}</p>\r\n        <p>Phone: {customer.phone}</p>\r\n        {userRole === 'admin' ? (\r\n          <>\r\n            <p>Credit Card: {customer.creditCard}</p>\r\n            <p>Medical Records: {customer.medicalRecords}</p>\r\n          </>\r\n        ) : userRole === 'privileged' ? (\r\n          <p>Credit Card: {customer.creditCard}</p>\r\n        ) : (\r\n          // For normal users\r\n          null\r\n        )}\r\n        <hr />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Search</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter search term...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n      {searchResult.map((customer) => displayCustomerDetails(customer))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}