{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\sdp-app\\\\client\\\\src\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  token\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [customerList, setCustomerList] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  useEffect(() => {\n    // Fetch user role from the token\n    const decodedToken = jwt_decode(token);\n    setUserRole(decodedToken.role);\n\n    // Fetch customer details based on the search term and user role\n    const fetchCustomers = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/search?term=${searchTerm}`, {\n          headers: {\n            Authorization: token\n          }\n        });\n        setCustomerList(response.data);\n      } catch (error) {\n        console.error('Error fetching customer details', error);\n      }\n    };\n    fetchCustomers();\n  }, [searchTerm, token]);\n  const canViewCreditCard = () => {\n    // Check if the user has the 'admin' role to view credit card details\n    return userRole === 'admin';\n  };\n  const canViewMedicalRecords = () => {\n    // Check if the user has the 'admin' or 'privileged' role to view medical records\n    return userRole === 'admin' || userRole === 'privileged';\n  };\n  const renderCustomerDetails = () => {\n    return customerList.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", customer.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", customer.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", customer.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", customer.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), canViewCreditCard() && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Credit Card: \", customer.creditCard]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this), canViewMedicalRecords() && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Medical Records: \", customer.medicalRecords]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, customer.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter search term\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Customer Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), renderCustomerDetails()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"PWDJCbxiwS5/ihDxhpXRZe5ugX0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwt_decode","jsxDEV","_jsxDEV","Search","token","_s","searchTerm","setSearchTerm","customerList","setCustomerList","userRole","setUserRole","decodedToken","role","fetchCustomers","response","get","headers","Authorization","data","error","console","canViewCreditCard","canViewMedicalRecords","renderCustomerDetails","map","customer","children","name","fileName","_jsxFileName","lineNumber","columnNumber","email","address","phone","creditCard","medicalRecords","id","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/USER/sdp-app/client/src/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst Search = ({ token }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [customerList, setCustomerList] = useState([]);\r\n  const [userRole, setUserRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch user role from the token\r\n    const decodedToken = jwt_decode(token);\r\n    setUserRole(decodedToken.role);\r\n\r\n    // Fetch customer details based on the search term and user role\r\n    const fetchCustomers = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3001/search?term=${searchTerm}`, {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        });\r\n\r\n        setCustomerList(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching customer details', error);\r\n      }\r\n    };\r\n\r\n    fetchCustomers();\r\n  }, [searchTerm, token]);\r\n\r\n  const canViewCreditCard = () => {\r\n    // Check if the user has the 'admin' role to view credit card details\r\n    return userRole === 'admin';\r\n  };\r\n\r\n  const canViewMedicalRecords = () => {\r\n    // Check if the user has the 'admin' or 'privileged' role to view medical records\r\n    return userRole === 'admin' || userRole === 'privileged';\r\n  };\r\n\r\n  const renderCustomerDetails = () => {\r\n    return customerList.map((customer) => (\r\n      <div key={customer.id}>\r\n        <p>Name: {customer.name}</p>\r\n        <p>Email: {customer.email}</p>\r\n        <p>Address: {customer.address}</p>\r\n        <p>Phone: {customer.phone}</p>\r\n        {canViewCreditCard() && <p>Credit Card: {customer.creditCard}</p>}\r\n        {canViewMedicalRecords() && <p>Medical Records: {customer.medicalRecords}</p>}\r\n        <hr />\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Search Page</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter search term\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <button>Search</button>\r\n\r\n      <h3>Customer Details</h3>\r\n      {renderCustomerDetails()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,YAAY,GAAGZ,UAAU,CAACI,KAAK,CAAC;IACtCO,WAAW,CAACC,YAAY,CAACC,IAAI,CAAC;;IAE9B;IACA,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAE,qCAAoCV,UAAW,EAAC,EAAE;UAClFW,OAAO,EAAE;YACPC,aAAa,EAAEd;UACjB;QACF,CAAC,CAAC;QAEFK,eAAe,CAACM,QAAQ,CAACI,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDN,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACR,UAAU,EAAEF,KAAK,CAAC,CAAC;EAEvB,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA,OAAOZ,QAAQ,KAAK,OAAO;EAC7B,CAAC;EAED,MAAMa,qBAAqB,GAAGA,CAAA,KAAM;IAClC;IACA,OAAOb,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAK,YAAY;EAC1D,CAAC;EAED,MAAMc,qBAAqB,GAAGA,CAAA,KAAM;IAClC,OAAOhB,YAAY,CAACiB,GAAG,CAAEC,QAAQ,iBAC/BxB,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,GAAG,QAAM,EAACD,QAAQ,CAACE,IAAI;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B9B,OAAA;QAAAyB,QAAA,GAAG,SAAO,EAACD,QAAQ,CAACO,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B9B,OAAA;QAAAyB,QAAA,GAAG,WAAS,EAACD,QAAQ,CAACQ,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC9B,OAAA;QAAAyB,QAAA,GAAG,SAAO,EAACD,QAAQ,CAACS,KAAK;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7BV,iBAAiB,CAAC,CAAC,iBAAIpB,OAAA;QAAAyB,QAAA,GAAG,eAAa,EAACD,QAAQ,CAACU,UAAU;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChET,qBAAqB,CAAC,CAAC,iBAAIrB,OAAA;QAAAyB,QAAA,GAAG,mBAAiB,EAACD,QAAQ,CAACW,cAAc;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7E9B,OAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAPEN,QAAQ,CAACY,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQhB,CACN,CAAC;EACJ,CAAC;EAED,oBACE9B,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB9B,OAAA;MACEqC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAEnC,UAAW;MAClBoC,QAAQ,EAAGC,CAAC,IAAKpC,aAAa,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF9B,OAAA;MAAAyB,QAAA,EAAQ;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEvB9B,OAAA;MAAAyB,QAAA,EAAI;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBR,qBAAqB,CAAC,CAAC;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAnEIF,MAAM;AAAA0C,EAAA,GAAN1C,MAAM;AAqEZ,eAAeA,MAAM;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}