{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\sdp-app\\\\client\\\\src\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport forge from 'node-forge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  token\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const decryptData = (data, iv, key) => {\n    try {\n      // Convert the hex-encoded data and IV to buffers\n      const encryptedBuffer = forge.util.createBuffer(forge.util.hexToBytes(data));\n      const ivBuffer = forge.util.createBuffer(forge.util.hexToBytes(iv));\n\n      // Convert the hex-encoded key to a buffer\n      const keyBuffer = forge.util.createBuffer(forge.util.hexToBytes(key));\n\n      // Create a decipher object using AES-CBC algorithm\n      const decipher = forge.cipher.createDecipher('AES-CBC', keyBuffer);\n\n      // Specify the IV\n      decipher.start({\n        iv: ivBuffer\n      });\n\n      // Update the decipher with the encrypted data\n      decipher.update(encryptedBuffer);\n\n      // Finalize the deciphering process\n      decipher.finish();\n\n      // Get the output (decrypted text)\n      const decryptedText = decipher.output.toString();\n      return decryptedText;\n    } catch (error) {\n      console.error('Decryption failed:', error.message);\n      return null;\n    }\n  };\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3001/search?term=${searchTerm}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const decryptData = (data, iv, key) => {\n        try {\n          const decipher = forge.cipher.createDecipher('AES-CBC', forge.util.createBuffer(key));\n          decipher.start({\n            iv: forge.util.createBuffer(forge.util.hexToBytes(iv))\n          });\n          decipher.update(forge.util.createBuffer(forge.util.hexToBytes(data)));\n          decipher.finish();\n          const decryptedText = decipher.output.toString();\n          return decodeURIComponent(decryptedText);\n        } catch (error) {\n          console.error('Decryption failed:', error.message);\n          return '';\n        }\n      };\n      setSearchResult(decryptedData);\n    } catch (error) {\n      console.error('Search failed', error);\n    }\n  };\n  const handleSearch = () => {\n    // Trigger search when the button is clicked\n    fetchData();\n  };\n  useEffect(() => {\n    const tokenPayload = token.split('.')[1];\n    const decodedPayload = JSON.parse(atob(tokenPayload));\n    const role = decodedPayload.role;\n    setUserRole(role);\n  }, [token]);\n  const displayCustomerDetails = customer => {\n    try {\n      const key = 'hghghghs12342345hghghghs12342345';\n\n      // Decode and then decrypt\n      const decodedCreditCard = decodeURIComponent(customer.creditCard);\n      const decodedMedicalRecords = decodeURIComponent(customer.medicalRecords);\n      const decryptedCreditCard = decryptData(decodedCreditCard, customer.ivCreditCard, key);\n      const decryptedMedicalRecords = decryptData(decodedMedicalRecords, customer.ivMedicalRecords, key);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", customer.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", customer.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", customer.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", customer.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), userRole === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Credit Card: \", decryptedCreditCard]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Medical Records: \", decryptedMedicalRecords]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : userRole === 'privileged' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Credit Card: \", decryptedCreditCard]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this) :\n        // For normal users\n        null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, customer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    } catch (error) {\n      console.error('Display customer details failed:', error.message);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter search term...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), searchResult.map(customer => displayCustomerDetails(customer))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"qfkkJieS0nJ8SgvtNQS4rT7U68o=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","forge","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","token","_s","searchTerm","setSearchTerm","searchResult","setSearchResult","userRole","setUserRole","decryptData","data","iv","key","encryptedBuffer","util","createBuffer","hexToBytes","ivBuffer","keyBuffer","decipher","cipher","createDecipher","start","update","finish","decryptedText","output","toString","error","console","message","fetchData","response","get","headers","Authorization","decodeURIComponent","decryptedData","handleSearch","tokenPayload","split","decodedPayload","JSON","parse","atob","role","displayCustomerDetails","customer","decodedCreditCard","creditCard","decodedMedicalRecords","medicalRecords","decryptedCreditCard","ivCreditCard","decryptedMedicalRecords","ivMedicalRecords","children","name","fileName","_jsxFileName","lineNumber","columnNumber","email","address","phone","id","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/USER/sdp-app/client/src/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport forge from 'node-forge';\r\n\r\nconst Search = ({ token }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [userRole, setUserRole] = useState('');\r\n\r\n  const decryptData = (data, iv, key) => {\r\n    try {\r\n      // Convert the hex-encoded data and IV to buffers\r\n      const encryptedBuffer = forge.util.createBuffer(forge.util.hexToBytes(data));\r\n      const ivBuffer = forge.util.createBuffer(forge.util.hexToBytes(iv));\r\n  \r\n      // Convert the hex-encoded key to a buffer\r\n      const keyBuffer = forge.util.createBuffer(forge.util.hexToBytes(key));\r\n  \r\n      // Create a decipher object using AES-CBC algorithm\r\n      const decipher = forge.cipher.createDecipher('AES-CBC', keyBuffer);\r\n  \r\n      // Specify the IV\r\n      decipher.start({ iv: ivBuffer });\r\n  \r\n      // Update the decipher with the encrypted data\r\n      decipher.update(encryptedBuffer);\r\n  \r\n      // Finalize the deciphering process\r\n      decipher.finish();\r\n  \r\n      // Get the output (decrypted text)\r\n      const decryptedText = decipher.output.toString();\r\n  \r\n      return decryptedText;\r\n    } catch (error) {\r\n      console.error('Decryption failed:', error.message);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/search?term=${searchTerm}`, {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      const decryptData = (data, iv, key) => {\r\n        try {\r\n          const decipher = forge.cipher.createDecipher('AES-CBC', forge.util.createBuffer(key));\r\n          decipher.start({ iv: forge.util.createBuffer(forge.util.hexToBytes(iv)) });\r\n          decipher.update(forge.util.createBuffer(forge.util.hexToBytes(data)));\r\n          decipher.finish();\r\n          const decryptedText = decipher.output.toString();\r\n          return decodeURIComponent(decryptedText);\r\n        } catch (error) {\r\n          console.error('Decryption failed:', error.message);\r\n          return '';\r\n        }\r\n      };\r\n      \r\n\r\n      setSearchResult(decryptedData);\r\n    } catch (error) {\r\n      console.error('Search failed', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    // Trigger search when the button is clicked\r\n    fetchData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const tokenPayload = token.split('.')[1];\r\n    const decodedPayload = JSON.parse(atob(tokenPayload));\r\n    const role = decodedPayload.role;\r\n    setUserRole(role);\r\n  }, [token]);\r\n\r\n  const displayCustomerDetails = (customer) => {\r\n    try {\r\n      const key = 'hghghghs12342345hghghghs12342345';\r\n      \r\n      // Decode and then decrypt\r\n      const decodedCreditCard = decodeURIComponent(customer.creditCard);\r\n      const decodedMedicalRecords = decodeURIComponent(customer.medicalRecords);\r\n      \r\n      const decryptedCreditCard = decryptData(decodedCreditCard, customer.ivCreditCard, key);\r\n      const decryptedMedicalRecords = decryptData(decodedMedicalRecords, customer.ivMedicalRecords, key);\r\n  \r\n      return (\r\n        <div key={customer.id}>\r\n          <p>Name: {customer.name}</p>\r\n          <p>Email: {customer.email}</p>\r\n          <p>Address: {customer.address}</p>\r\n          <p>Phone: {customer.phone}</p>\r\n          {userRole === 'admin' ? (\r\n            <>\r\n              <p>Credit Card: {decryptedCreditCard}</p>\r\n              <p>Medical Records: {decryptedMedicalRecords}</p>\r\n            </>\r\n          ) : userRole === 'privileged' ? (\r\n            <p>Credit Card: {decryptedCreditCard}</p>\r\n          ) : (\r\n            // For normal users\r\n            null\r\n          )}\r\n          <hr />\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.error('Display customer details failed:', error.message);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <h2>Search</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter search term...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n      {searchResult.map((customer) => displayCustomerDetails(customer))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}